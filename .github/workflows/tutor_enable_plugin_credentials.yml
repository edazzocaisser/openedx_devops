#------------------------------------------------------------------------------
# written by: mcdaniel
# date: feb-2022
#
# usage: deploy a Tutor-created openedx Docker image to the Kubernetes cluster.
#        The openedx docker image is created by a Github action in tutor-build.git.
#
#        The general work flow in this action is:
#        ----------------------------------------
#        I.   Bootstrap the Github Actions Ubuntu instance.
#        II.  Get backend services configuration data stored in Kubernetes secrets
#        III. Configure Open edX by setting environment variables
#        IV.  Merge all of the configuration data into Tutor's Open edX configuration files
#        V.   Deploy Open edX into the Kubernetes cluster
#------------------------------------------------------------------------------
name: enable Credentials plugin for tutor

on: [workflow_call]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      COMMON_LOGO_URL: https://www.edx.org/images/logos/edx-logo-elm.svg
      DOCKER_IMAGE_CREDENTIALS: 621672204142.dkr.ecr.us-east-2.amazonaws.com/openedx_credentials:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      # retrieve the MySQL connection parameters that we created in Terraform
      # and then stored in Kubernetes secrets. These include:
      #   MYSQL_HOST: mysql.app.mrionline.com
      #   MYSQL_PORT: "3306"
      #   OPENEDX_MYSQL_USERNAME: openedx
      #   OPENEDX_MYSQL_PASSWORD: **************
      #   MYSQL_ROOT_USERNAME: root
      #   MYSQL_ROOT_PASSWORD: *************
      #
      # Also note that we are using jq to add a prefix of "TUTOR_" to each of the parameter names
      #
      # see: https://github.com/Medality-Health/openedx_devops/blob/main/terraform/modules/mysql/main.tf
      - name: fetch MySQL configuration from Kubernetes secrets
        run: |-
          kubectl get secret mysql-credentials -n $NAMESPACE  -o json | jq  '.data | map_values(@base64d)' | jq -r 'keys[] as $k | "TUTOR_\($k|ascii_upcase)=\(.[$k])"' >> $GITHUB_ENV

      # IMPORTANT: you must run tutor_build_credentials first.
      - name: Enable and configure credentials plugin
        run: |-
          pip install git+https://github.com/lpm0073/tutor-contrib-credentials@v13.0.2
          tutor plugins enable credentials
          tutor config save --set CREDENTIALS_DOCKER_IMAGE=${DOCKER_IMAGE_CREDENTIALS} \
                            --set CREDENTIALS_HOST="credentials.${LMS_HOSTNAME}" \
                            --set CREDENTIALS_LMS_HOST=${LMS_HOSTNAME} \
                            --set CREDENTIALS_LMS_URL_ROOT=${LMS_HOSTNAME} \
                            --set CREDENTIALS_LMS_URL=${LMS_HOSTNAME} \
                            --set CREDENTIALS_CATALOG_API_URL=${LMS_HOSTNAME} \
                            --set CREDENTIALS_PRIVACY_POLICY_URL="${LMS_HOSTNAME}/pricacy-policy" \
                            --set CREDENTIALS_SECRET_KEY="${TUTOR_OPENEDX_SECRET_KEY}" \
                            --set CREDENTIALS_SITE_NAME="Your School" \
                            --set CREDENTIALS_TOS_URL="${LMS_HOSTNAME}/tos" \
                            --set CREDENTIALS_LOGO_URL="${COMMON_LOGO_URL}" \
                            --set CREDENTIALS_LOGO_URL_PNG="${COMMON_LOGO_URL}" \
                            --set CREDENTIALS_LOGO_URL_SVG="" \
                            --set CREDENTIALS_LOGO_WHITE_URL="${COMMON_LOGO_URL}" \
                            --set CREDENTIALS_LOGO_WHITE_URL_PNG="${COMMON_LOGO_URL}" \
                            --set CREDENTIALS_LOGO_WHITE_URL_SVG="" \
                            --set CREDENTIALS_FAVICON_URL="${COMMON_LOGO_URL}" \
