#------------------------------------------------------------------------------
# written by: mcdaniel
# date: feb-2022
#
# usage: deploy a Tutor-created openedx Docker image to the Kubernetes cluster.
#        The openedx docker image is created by a Github action in tutor-build.git.
#
#        The general work flow in this action is:
#        ----------------------------------------
#        I.   Bootstrap the Github Actions Ubuntu instance.
#        II.  Get backend services configuration data stored in Kubernetes secrets
#        III. Configure Open edX by setting environment variables
#        IV.  Merge all of the configuration data into Tutor's Open edX configuration files
#        V.   Deploy Open edX into the Kubernetes cluster
#------------------------------------------------------------------------------
name: Deploy to Kubernetes

on: [workflow_call]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT_ID: prod
      NAMESPACE: openedx-prod
      OPENEDX_COMMON_VERSION: open-release/maple.3

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      - name: Initialize environment
        uses: ./.github/workflows/tutor_deploy_init

      - name: Enable Tutor plugins
        ses: ./.github/workflows/tutor_enable_plugins

      # note that the Kubernetes additional config data is locally
      # stored in ci/tutor-deploy/environments/prod/k8s/
      # in Kubernetes manifest yaml format
      - name: Create Kubernetes add-on resources
        run:  |-
          # Create kubernetes ingress and other environment resources
          kubectl apply -f "ci/tutor-deploy/environments/$ENVIRONMENT_ID/k8s"


      # ---------------------------------------------------------------------------------
      # Note: We're not managing AWS SES with Terraform simply because the service is fiddly
      # and AWS is neurotic about any changes to the config.
      # ---------------------------------------------------------------------------------
      - name: Setup AWS SES over SMTP
        run: |-
          echo "TUTOR_RUN_SMTP=true" >> $GITHUB_ENV
          tutor config save --set EMAIL_BACKEND="django.core.mail.backends.smtp.EmailBackend" \
                            --set EMAIL_HOST="email-smtp.us-east-2.amazonaws.com" \
                            --set EMAIL_HOST_PASSWORD=${{ secrets.AWS_SES_IAM_SECRET }} \
                            --set EMAIL_HOST_USER=${{ secrets.AWS_SES_IAM_KEY }} \
                            --set EMAIL_PORT=587 \
                            --set EMAIL_USE_TLS=true


      - name: Generate Tutor Config
        run:  |-
          export TUTOR_JWT_RSA_PRIVATE_KEY=\'$(sed -E 's/$/\n/g' ./jwt_private_key)\'
          tutor config save
          cat $TUTOR_ROOT/config.yml

      #------------------------------------------------------------------------
      # IV. Merge all of the configuration data into Tutor's Open edX
      #     configuration files: config.yml, lms.env.json, cms.env.json
      #
      # In this step we're combining three sources of data:
      # 1. sensitive configuration data retrieved from Kubernetes secrets in section II above
      # 2. Open edx application and services configuration data created here in section III
      # 3. LMS and CMS application configuration data stored in our repo at ci/tutor-deploy/environments/prod/settings_merge.json
      #------------------------------------------------------------------------
      - name: Patch Generated Configuration (Static)
        run:  |-
          echo "config.yml full path: $(tutor config printroot)/config.yml"
          cat "$(tutor config printroot)/config.yml"
          echo ""
          echo ""


          cd $TUTOR_ROOT/env/apps/openedx/config/

          mv lms.env.json lms.env.json.orig
          jq -s '.[0] * .[1]'  lms.env.json.orig  "$GITHUB_WORKSPACE/ci/tutor-deploy/environments/$ENVIRONMENT_ID/settings_merge.json" >  lms.env.json

          echo 'Tutor lms.env.json contents:'
          cat lms.env.json
          echo ""
          echo ""

          mv cms.env.json cms.env.json.orig
          jq -s '.[0] * .[1]'  cms.env.json.orig  "$GITHUB_WORKSPACE/ci/tutor-deploy/environments/$ENVIRONMENT_ID/settings_merge.json" >  cms.env.json
          rm *orig

          echo 'Tutor cms.env.json contents:'
          cat cms.env.json
          echo ""
          echo ""

      #------------------------------------------------------------------------
      # V. Deploy Open edX
      #------------------------------------------------------------------------
      - name: Deploy Tutor
        run:  |-
          tutor k8s start

      - name: Run tutor init
        run:  |-
          tutor k8s init

      - name: Set theme
        run:  |-
          tutor k8s settheme edx-theme

      - name: Create admin user
        run:  |-
          $(kubectl get secret admin-edx -n $NAMESPACE  -o json | jq  '.data | map_values(@base64d)' |   jq -r 'keys[] as $k | "export \($k|ascii_upcase)=\(.[$k])"')
          tutor k8s createuser --password "$ADMIN_PASSWORD" --staff --superuser "$ADMIN_USER" admin@mrionline.com
